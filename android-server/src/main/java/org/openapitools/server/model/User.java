/**
 * Emergency Alerts
 * This application notifies users about an emergency within a geographical area, you can also obtain users information and its location within an area to plan possible evacuations or other uses
 *
 * OpenAPI spec version: 1.0
 * Contact: info@spilab.es
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.server.model;

import org.openapitools.server.model.Location;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;



@ApiModel(description = "")
public class User {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("contact")
  private String contact = null;
  @SerializedName("reduced_mobility")
  private Boolean reducedMobility = null;
  @SerializedName("other_problems")
  private String otherProblems = null;
  @SerializedName("location")
  private Location location = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getContact() {
    return contact;
  }
  public void setContact(String contact) {
    this.contact = contact;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getReducedMobility() {
    return reducedMobility;
  }
  public void setReducedMobility(Boolean reducedMobility) {
    this.reducedMobility = reducedMobility;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getOtherProblems() {
    return otherProblems;
  }
  public void setOtherProblems(String otherProblems) {
    this.otherProblems = otherProblems;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Location getLocation() {
    return location;
  }
  public void setLocation(Location location) {
    this.location = location;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return (this.name == null ? user.name == null : this.name.equals(user.name)) &&
        (this.contact == null ? user.contact == null : this.contact.equals(user.contact)) &&
        (this.reducedMobility == null ? user.reducedMobility == null : this.reducedMobility.equals(user.reducedMobility)) &&
        (this.otherProblems == null ? user.otherProblems == null : this.otherProblems.equals(user.otherProblems)) &&
        (this.location == null ? user.location == null : this.location.equals(user.location));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.contact == null ? 0: this.contact.hashCode());
    result = 31 * result + (this.reducedMobility == null ? 0: this.reducedMobility.hashCode());
    result = 31 * result + (this.otherProblems == null ? 0: this.otherProblems.hashCode());
    result = 31 * result + (this.location == null ? 0: this.location.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  contact: ").append(contact).append("\n");
    sb.append("  reducedMobility: ").append(reducedMobility).append("\n");
    sb.append("  otherProblems: ").append(otherProblems).append("\n");
    sb.append("  location: ").append(location).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
